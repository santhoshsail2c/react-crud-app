{"version":3,"sources":["protectedRoute.js","auth.js","constants.js","screens/loginScreen.js","store/actions.js","screens/manipulateHorseFields.js","screens/appLayoutScreen.js","App.js","store/reducers.js","store/index.js","serviceWorker.js","index.js"],"names":["ProtectedRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","LoginForm","loginAPICall","val","a","async","fetch","CONSTS","method","mode","headers","body","JSON","stringify","email","username","password","sha512","response","json","respObject","setItem","data","access_token","setToken","token","history","push","console","log","handleSubmit","e","preventDefault","form","validateFields","err","values","this","getFieldDecorator","onSubmit","className","Item","rules","required","message","prefix","type","style","color","placeholder","htmlType","React","WrappedLoginForm","Form","create","name","LoginComponent","connect","reduxState","dispatch","payload","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","HorseComp","loading","createHorsesAPICall","horse_name","horse_number","age_verified","dob","ushja_registered","setState","moment","format","success","resetFields","getHorsesAPICall","modalClose","error","editHorsesAPICall","editItem","id","editStatus","label","title","hasFeedback","initialValue","allowClear","maxLength","Group","Button","value","Option","HorseCompWrapper","Layout","horsesList","visible","createHorse","showModal","editHorse","item","handleOk","cancel","logOut","clear","handleCancel","deleteHorse","marginTop","onClick","onConfirm","onCancel","okText","cancelText","marginLeft","padding","itemLayout","dataSource","renderItem","Meta","avatar","src","description","onOk","footer","App","basename","process","exact","path","AppLayout","Login","initialState","rootReducer","action","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5422979c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {isAuthenticated} from \"./auth\";\n\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","export function isAuthenticated() {\n  let token = localStorage.getItem('token');\n  if(token){\n    return true\n  }else{\n    return false\n  }\n}\n","const LOGIN = '/';\nconst SECURED_VIEW = '/secured';\nconst BASE_URL = 'http://dev.api.staller.show/'\nconst SET_TOKEN = 'SET_TOKEN'\n\nexport default { LOGIN, SECURED_VIEW, BASE_URL, SET_TOKEN }\n","import React from 'react';\nimport CONSTS from \"../constants\";\nimport { Form, Icon, Input, Button } from 'antd';\nimport { sha512 } from 'js-sha512'\nimport { connect } from \"react-redux\";\nimport { setToken } from \"../store/actions\";\n\nclass LoginForm extends React.Component {\n\n  componentDidMount(){\n    if(localStorage.getItem('token')){\n      this.props.history.push(CONSTS.SECURED_VIEW);\n    }\n  }\n\n  loginAPICall = async (val) => {\n    try{\n      const response = await fetch(CONSTS.BASE_URL + 'v1/users/login', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Access-Control-Allow-Origin':'*', 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: val.username, password: sha512(val.password) })\n      });\n      const respObject = await response.json()\n      localStorage.setItem('token', respObject.data.access_token)\n      this.props.setToken({token:respObject.data.access_token})\n      this.props.history.push(CONSTS.SECURED_VIEW);\n      return respObject\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.loginAPICall(values)\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create({ name: 'login' })(LoginForm);\n\nconst mapStateToProps = (state) => {\n  return {\n    reduxState: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setToken: token => dispatch(setToken(token))\n  };\n}\n\nconst LoginComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedLoginForm);\nexport default LoginComponent\n","import CONSTS from \"../constants\";\n\nexport function setToken(payload) {\n  return {\n    type: CONSTS.SET_TOKEN,\n    payload: payload.token\n  };\n}\n","import React from 'react';\nimport CONSTS from \"../constants\";\nimport moment from 'moment';\nimport { Form, DatePicker, Tooltip, Icon, Input, Button, Radio, Select, message } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nclass HorseComp extends React.Component {\n\n  state = { loading: false }\n\n  static propTypes = {\n    getHorsesAPICall: PropTypes.func.isRequired,\n    modalClose: PropTypes.func.isRequired,\n    editStatus: PropTypes.bool.isRequired,\n    editItem: PropTypes.object\n  }\n\n  createHorsesAPICall = async (val) => {\n    const { horse_name, horse_number, age_verified, dob, color, ushja_registered } = val;\n    this.setState({\n      loading: true\n    })\n    try{\n      const response = await fetch(CONSTS.BASE_URL + 'v1/horses', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          horse_name,\n          horse_number,\n          age_verified: age_verified === 'true' ? true : false,\n          dob: moment(dob).format(\"YYYY-MM-DD\"),\n          color,\n          ushja_registered: ushja_registered === 'true' ? true : false\n        })\n      });\n      const respObject = await response.json()\n      message.success('Horse added Successfully')\n      this.props.form.resetFields()\n      this.props.getHorsesAPICall()\n      this.props.modalClose()\n      this.setState({\n        loading: false\n      })\n      return respObject\n    }catch(e){\n      console.log(e);\n      message.error('Oops try again')\n    }\n  }\n\n  editHorsesAPICall = async (val) => {\n\n    const { horse_name, horse_number, age_verified, dob, color, ushja_registered } = val;\n    \n    this.setState({\n      loading: true\n    })\n\n    try{\n      const response = await fetch(CONSTS.BASE_URL + 'v1/horses/'+ this.props.editItem.id, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer '+localStorage.getItem('token'),\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          horse_name: horse_name,\n          horse_number: horse_number,\n          age_verified: age_verified === 'true' ? true : false,\n          dob: moment(dob).format(\"YYYY-MM-DD\"),\n          color: color,\n          ushja_registered: ushja_registered === 'true' ? true : false\n        })\n      });\n      const respObject = await response.json()\n      this.props.form.resetFields()\n      this.props.modalClose()\n      this.setState({\n        loading: false\n      })\n      message.success('Horse updated Successfully')\n      return respObject\n    }catch(e){\n      console.log(e);\n      message.error('Oops try again')\n    }\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if(this.props.editStatus){\n          this.editHorsesAPICall(values)\n        }else{\n          this.createHorsesAPICall(values)\n        }\n      }\n    });\n  };\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    const { editStatus, editItem } = this.props;\n    return(\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label={\n            <span>\n              Horse Name&nbsp;\n              <Tooltip title=\"Please input name of the horse.\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          } hasFeedback>\n          {getFieldDecorator('horse_name', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input horse name!',\n              },\n            ],\n            initialValue: editStatus ? editItem && editItem.horse_name : ''\n          })(<Input allowClear maxLength={255} />)}\n        </Form.Item>\n        <Form.Item label={\n            <span>\n              Horse number&nbsp;\n              <Tooltip title=\"Please input number of the horse.\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          } hasFeedback>\n          {getFieldDecorator('horse_number', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input horse number!',\n              },\n            ],\n            initialValue: editStatus ? editItem && editItem.horse_number : ''\n          })(<Input allowClear />)}\n        </Form.Item>\n        <Form.Item label={\n            <span>\n              Age Verified&nbsp;\n              <Tooltip title=\"Select if age verified or not\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }>\n          {getFieldDecorator('age_verified', {\n\n            initialValue: editStatus ? (editItem && editItem.age_verified === 1 ? \"true\" : \"false\") : ''\n          })(\n            <Radio.Group>\n              <Radio.Button value=\"true\">Yes</Radio.Button>\n              <Radio.Button value=\"false\">No</Radio.Button>\n            </Radio.Group>,\n          )}\n        </Form.Item>\n        <Form.Item label={\n            <span>\n              DOB&nbsp;\n              <Tooltip title=\"Please input DOB.\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }>\n          {getFieldDecorator('dob', {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n            initialValue: editStatus ? editItem && moment(editItem.dob, 'YYYY-MM-DD') : null\n          })(<DatePicker />)}\n        </Form.Item>\n        <Form.Item label={\n            <span>\n              Color&nbsp;\n              <Tooltip title=\"Please input color of the horse.\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          } hasFeedback>\n          {getFieldDecorator('color', {\n            rules: [{ required: true, message: 'Please select color!' }],\n            initialValue: editStatus ? editItem && editItem.color : ''\n          })(\n            <Select placeholder=\"Please select a color\">\n              <Select.Option value=\"green\">Green</Select.Option>\n              <Select.Option value=\"red\">Red</Select.Option>\n            </Select>,\n          )}\n        </Form.Item>\n        <Form.Item label={\n            <span>\n              Ushja Registered&nbsp;\n              <Tooltip title=\"Select if Ushja Registered or not\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }>\n          {getFieldDecorator('ushja_registered', {\n\n            initialValue: editStatus ? (editItem && editItem.ushja_registered === 1 ? \"true\" : \"false\") : ''\n          })(\n            <Radio.Group>\n              <Radio.Button value=\"true\">Yes</Radio.Button>\n              <Radio.Button value=\"false\">No</Radio.Button>\n            </Radio.Group>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" loading={this.state.loading} htmlType=\"submit\">\n            { !editStatus ? 'Create' : 'Edit' }\n          </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n\n}\n\nconst HorseCompWrapper = Form.create({ name: 'horse' })(HorseComp);\n\nexport default HorseCompWrapper\n","import React from 'react';\nimport CONSTS from \"../constants\";\nimport HorseComp from './manipulateHorseFields'\nimport { Modal, Button, Spin, List, Avatar, Popconfirm, message } from 'antd';\n\nclass Layout extends React.Component {\n\n  state = {\n    loading:true,\n    horsesList: null,\n    visible: false,\n    editStatus: false,\n    editItem: null,\n  }\n\n  componentDidMount(){\n    this.getHorsesAPICall()\n  }\n\n  createHorse = () => {\n    this.setState({\n      editStatus: false,\n    });\n    this.showModal();\n  }\n\n  editHorse = (item) => {\n    this.setState({\n      editStatus: true,\n      editItem: item,\n    });\n    this.showModal();\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n    this.getHorsesAPICall()\n  };\n\n  cancel = (e) => {\n    message.error('Operation cancelled!');\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.props.history.push(CONSTS.LOGIN);\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n    this.getHorsesAPICall()\n  };\n\n  getHorsesAPICall = async (val) => {\n    try{\n      const response = await fetch(CONSTS.BASE_URL + 'v1/horses', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer '+localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n      });\n      const respObject = await response.json()\n      this.setState({\n        loading: false,\n        horsesList: respObject\n      })\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  deleteHorse = async (item) => {\n    try{\n      await fetch(CONSTS.BASE_URL + 'v1/horses/'+ item.id, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': 'Bearer '+localStorage.getItem('token'),\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(item)\n      });\n      this.getHorsesAPICall()\n      message.success('Horse deleted Successfully')\n    }catch(e){\n      console.log(e);\n      message.error('Oops try again')\n    }\n\n  }\n\n  render() {\n    const { loading, horsesList, editStatus, editItem } = this.state;\n    if(loading){\n      return (\n        <Spin style={{ marginTop: '140px' }} />\n      )\n    }else{\n      return (\n        <div>\n          <Button style={{ marginTop: '50px' }} onClick={this.createHorse}>Create</Button>\n          <Popconfirm\n            title=\"Are you sure log out?\"\n            onConfirm={this.logOut}\n            onCancel={this.cancel}\n            okText=\"Yes, I want to log out!\"\n            cancelText=\"No\"\n          >\n            <Button type=\"dashed\" style={{ marginLeft: '10px' }}>Logout</Button>\n          </Popconfirm>\n          <List\n            style={{ padding: '50px 250px 50px 250px' }}\n            itemLayout=\"horizontal\"\n            dataSource={horsesList ? horsesList.data : []}\n            renderItem={item => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={<Avatar src=\"http://pngimg.com/uploads/horse/horse_PNG2552.png\" />}\n                  title={`Horse Name is ${item.horse_name}`}\n                  description={`Horse Number is ${item.horse_number}`}\n                />\n                <Button onClick={() => this.editHorse(item)} type=\"primary\">Edit</Button>\n                <Popconfirm\n                  title=\"Are you sure delete this horse?\"\n                  onConfirm={() => this.deleteHorse(item)}\n                  onCancel={this.cancel}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Button type=\"danger\" style={{ marginLeft: '10px' }}>Delete</Button>\n                </Popconfirm>\n              </List.Item>\n            )}\n          />\n          <Modal\n            title={`${editStatus === true ? 'Edit' : 'Create'} Horse`}\n            visible={this.state.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={null}\n          >\n            <HorseComp modalClose={this.handleCancel} getHorsesAPICall={this.getHorsesAPICall} editStatus={editStatus} editItem={editItem} />\n          </Modal>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { ProtectedRoute } from \"./protectedRoute\";\nimport Login from \"./screens/loginScreen\";\nimport AppLayout from \"./screens/appLayoutScreen\";\nimport CONSTS from \"./constants\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <ProtectedRoute exact path={CONSTS.SECURED_VIEW} component={AppLayout} />\n          <Route path={CONSTS.LOGIN} component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import CONSTS from \"../constants\";\n\nconst initialState = {\n  access_token: ''\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === CONSTS.SET_TOKEN) {\n    return {\n      ...state,\n      access_token: action.payload\n    }\n  }\n  return state;\n}\n\nexport default rootReducer;\n","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nlet store = createStore(persistedReducer)\nlet persistor = persistStore(store)\n\nexport {store, persistor}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor }  from \"./store/index\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}